body {
    margin: 0;
    padding: 0;
    font-family: 'IBM Plex Mono', monospace;
    transition: background-color 0.3s, color 0.3s;
    background-color: var(--bg-color);
    color: var(--text-color);
}

.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
    padding-top: 60px;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    gap: 40px;
    position: relative;
}

.header {
    background-color: var(--card-bg);
    padding: 20px;
    border-radius: 8px;
    position: relative;
    z-index: 1;
    transition: all 0.3s ease;
    width: calc(100% - 40px);
    max-width: 1160px;
    margin-bottom: 20px;
    margin-top: 10px;
}

/* Remove the blur overlay for header */
.header::after {
    display: none;
}

/* Style the date section with navigation arrows */
.date {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 20px;
    width: 100%;
}

.date-content {
    text-align: center;
    flex: 1;
    position: relative;
}

.date-nav {
    background: transparent;
    border: none;
    color: var(--muted-text);
    font-size: 18px;
    cursor: pointer;
    padding: 10px;
    transition: all 0.2s ease;
    opacity: 0.7;
}

.date-nav:hover {
    color: var(--accent-color);
    opacity: 1;
    transform: scale(1.1);
}

.date-nav:active {
    transform: scale(0.95);
}

.date h1 {
    margin: 0;
    font-size: 24px;
    font-weight: 500;
}

.date p {
    margin: 0 0 5px;
    color: var(--muted-text);
    font-size: 14px;
}

.arabic-date {
    font-family: 'Traditional Arabic', 'Arial', sans-serif;
    font-size: 1.2em;
    direction: rtl;
}

.english-date {
    font-size: 0.9em;
}

.main-times {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 30px 0;
}

/* Update time block styles */
.time-block {
    display: flex;
    flex-direction: column;
    width: 150px;
}

.time-block:last-child {
    align-items: flex-end; /* Right align IFTAR time */
}

.time-block .time {
    font-size: 32px;
    font-weight: 400;
    letter-spacing: -1px;
}

.time-block .label {
    font-size: 14px;
    color: var(--muted-text);
    margin-bottom: 8px;
}

.progress-bar {
    flex-grow: 1;
    height: 2px;
    background-color: var(--border-color);
    margin: 0 20px;
}

.progress {
    width: 30%;
    height: 100%;
    background-color: var(--accent-color);
}

.prayer-blocks {
    display: flex;
    justify-content: space-between;
    gap: 10px;
    margin-top: 24px;
}

.prayer-time {
    background-color: var(--prayer-box-bg);
    padding: 11px;
    border-radius: 6px;
    flex: 1;
    text-align: left;
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: center;
    min-height: 64px;
    padding-left: 34px;
    padding-right: 29px;
    overflow: hidden;
    transition: background-color 0.3s;
    cursor: pointer;
    border: 1px solid transparent;
}

.prayer-time.active {
    position: relative;
    overflow: hidden; /* Ensure the ripple stays contained */
    background-color: var(--prayer-box-bg) !important; /* Use the same background as other prayer boxes */
}

/* Update the pulse animation to only show for active prayer on current date */
/* First, remove the existing pulse styles */
.prayer-time.active::before,
.prayer-time.active::after {
    display: none; /* Hide by default */
}

/* Only show pulse for active prayer on current date (not past or future) */
.prayer-time.active:not(.past):not(.future)::before {
    content: '';
    display: block; /* Show only for current date active prayer */
    position: absolute;
    top: 50%;
    left: 15px;
    transform: translateY(-50%);
    width: 8px;
    height: 8px;
    background-color: var(--accent-color);
    border-radius: 50%;
    z-index: 5;
}

/* Only show pulse animation for active prayer on current date */
.prayer-time.active:not(.past):not(.future)::after {
    content: '';
    display: block; /* Show only for current date active prayer */
    position: absolute;
    top: 50%;
    left: 15px;
    transform: translateY(-50%);
    width: 8px;
    height: 8px;
    background-color: var(--accent-color);
    border-radius: 50%;
    z-index: 4;
    animation: ripple 6.5s infinite;
    opacity: 0.2;
    pointer-events: none;
}

/* Keep the existing ripple animation */
@keyframes ripple {
    0% {
        transform: translateY(-50%) scale(1);
        opacity: 0.2;
    }
    70% {
        transform: translateY(-50%) scale(40);
        opacity: 0;
    }
    70.1% {
        transform: translateY(-50%) scale(1);
        opacity: 0;
    }
    100% {
        transform: translateY(-50%) scale(1);
        opacity: 0.2;
    }
}

/* Remove the box-wide pulse animation as it's redundant with the ripple */
.prayer-time.active .box-pulse {
    display: none;
}

/* Use the .checkmark element instead for the checkmark functionality */
.prayer-time .checkmark {
    font-family: 'Font Awesome 6 Free';
    font-weight: 900;
    position: absolute;
    right: 12px;
    top: 50%;
    transform: translateY(-50%);
    color: var(--muted-text);
    opacity: 0.3; /* Show with low opacity by default instead of 0 */
    transition: opacity 0.2s, color 0.2s;
    font-size: 14px;
    z-index: 15;
}

/* Increase opacity on hover */
.prayer-time:hover .checkmark {
    opacity: 0.7;
}

/* Full opacity and accent color when completed */
.prayer-time.completed .checkmark {
    opacity: 1;
    color: var(--accent-color);
    animation: celebrate 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

/* Hide pulse when prayer is completed */
.prayer-time.active.completed::before,
.prayer-time.active.completed::after {
    display: none;
}

.label {
    display: block;
    color: var(--muted-text);
    font-size: 12px;
    margin-bottom: 4px;
    letter-spacing: 1px;
    text-transform: uppercase;
}

.time {
    font-size: 14px;
    font-weight: 400;
    letter-spacing: 0.5px;
}

.table-container {
    background-color: var(--card-bg);
    border-radius: 8px;
    padding: 20px;
    overflow-x: auto;
    flex: 1;
    position: relative;
    z-index: 2;
    transition: all 0.3s ease;
    margin-top: 20px;
}

/* Remove scroll detection styles */
.container.is-scrolled .header {
    transform: none;
    background-color: var(--card-bg);
    pointer-events: auto;
}

/* Remove blur effect for header */
.container.is-scrolled .header::before {
    display: none;
}

/* Update table styles - simplified */
table {
    width: 100%;
    border-collapse: separate;
    border-spacing: 0;
    position: relative;
}

th, td {
    padding: 16px 12px;
    text-align: left;
    border-bottom: 1px solid var(--border-color);
    border-right: 1px solid var(--border-color);
    border-left: 1px solid var(--border-color);
}

/* Remove double borders between cells */
th:not(:first-child), td:not(:first-child) {
    border-left: none;
}

/* Add top border to header row */
thead tr th {
    border-top: 1px solid var(--border-color);
}

/* Sticky first column */
th:first-child, td:first-child {
    position: sticky;
    left: 0;
    z-index: 10;
    background-color: var(--card-bg) !important;
    border-left: 1px solid var(--border-color);
}

/* Header styling */
th {
    color: var(--muted-text);
    font-weight: normal;
    font-size: 12px;
    padding-top: 20px;
    padding-bottom: 20px;
}

/* Cell styling */
td {
    font-size: 14px;
    line-height: 1.5;
    position: relative;
    transition: color 0.2s;
    padding-right: 35px; /* Space for checkmark */
}

/* Checkmark in cells */
td::before {
    content: '\f00c'; /* FontAwesome checkmark */
    font-family: 'Font Awesome 6 Free';
    font-weight: 900;
    position: absolute;
    right: 16px;
    top: 50%;
    transform: translateY(-50%);
    opacity: 0.3;
    transition: color 0.2s, opacity 0.2s;
    transform-origin: center;
    color: var(--muted-text);
    font-size: 14px;
}

/* Hover state for checkmark */
td:hover::before {
    opacity: 0.8;
}

/* Completed cell styling */
td.completed {
    background-color: rgba(var(--accent-color-rgb), 0.05);
    color: var(--accent-color);
    font-weight: 500;
}

td.completed::before {
    color: var(--accent-color);
    opacity: 1.0;
    animation: celebrate 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

/* Ensure completed cells maintain styling on hover */
td.completed:hover {
    background-color: rgba(var(--accent-color-rgb), 0.08) !important;
    color: var(--accent-color) !important;
}

td.completed:hover::before {
    color: var(--accent-color) !important;
    opacity: 1.0 !important;
}

/* Date column special styling */
td:first-child {
    color: var(--muted-text);
    cursor: default;
    padding-right: 12px;
}

td:first-child::before {
    display: none;
}

/* Prayer time columns */
td:nth-child(n+2) {
    cursor: pointer;
}

/* Future date styling */
tr.future-date td {
    pointer-events: none;
    opacity: 0.7;
    cursor: default;
}

tr.future-date td:first-child {
    opacity: 1 !important;
}

tr.future-date td::before {
    display: none !important;
}

tr.future-date td:hover {
    background-color: transparent !important;
}

/* Cell content animation */
td .cell-content {
    display: inline-block;
    transform-origin: left center;
}

td.animate-press .cell-content {
    animation: cellPress 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

/* Celebration styling for completed cells */
td.completed .celebration {
    position: absolute;
    top: 50%;
    right: 20px;
    width: 60px;
    height: 60px;
    transform: translate(50%, -50%);
    pointer-events: none;
    z-index: 10;
    overflow: hidden; /* Prevent particles from appearing outside container */
}

td.completed .celebration i {
    position: absolute;
    top: 50%;
    left: 50%;
    font-size: 12px;
    color: var(--accent-color);
    text-shadow: 0 0 5px rgba(var(--accent-color-rgb), 0.5);
    animation: float 1.5s ease-out forwards;
    opacity: 0;
    will-change: transform, opacity; /* Optimize animation performance */
}

/* Mobile table adjustments */
@media (max-width: 768px) {
    .table-container {
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
        padding-left: 0 !important;
    }
    
    table {
        min-width: 750px;
    }
    
    th:first-child, td:first-child {
        box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
        min-width: 80px;
        padding-left: 12px;
        border-left: none;
    }
    
    td, th {
        min-width: 90px;
        white-space: nowrap;
    }
    
    td:nth-child(2), td:nth-child(6),
    th:nth-child(2), th:nth-child(6) {
        min-width: 100px;
    }
    
    /* Scroll indicators - REMOVING PROBLEMATIC GRADIENTS */
    .table-container.scrolled-right::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 15px;
        z-index: 11;
        pointer-events: none;
    }
    
    .table-container.scrolled-left::after {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        height: 100%;
        width: 15px;
        z-index: 11;
        pointer-events: none;
    }
}

/* Extra small devices */
@media (max-width: 480px) {
    .table-container {
        padding: 12px 12px 12px 0;
    }
    
    td, th {
        min-width: 85px;
    }
    
    th:first-child, td:first-child {
        min-width: 70px;
    }
}

/* Theme Toggle Button - Updated positioning */
.theme-toggle {
    position: absolute;
    top: 20px;
    right: 20px;
    z-index: 1000;
    display: flex;
    gap: 10px;
}

.theme-button,
.settings-button {
    background: transparent;
    border: none;
    color: inherit;
    cursor: pointer;
    padding: 10px;
    font-size: 20px;
    transition: transform 0.3s;
}

.theme-button:hover,
.settings-button:hover {
    transform: scale(1.1);
}

.settings-dropdown {
    position: absolute;
    top: 100%;
    right: 0;
    background-color: var(--card-bg);
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    padding: 15px;
    min-width: 280px;
    margin-top: 10px;
    display: none;
    z-index: 1001;
}

.settings-dropdown.active {
    display: block;
    animation: fadeIn 0.2s ease-out;
}

.settings-section {
    margin-bottom: 15px;
}

.settings-section:last-child {
    margin-bottom: 0;
}

.settings-section h3 {
    margin: 0 0 10px 0;
    font-size: 14px;
    color: var(--muted-text);
    font-weight: 500;
}

.radio-group {
    display: flex;
    flex-direction: column;
    gap: 8px;
}

/* Custom radio buttons */
.radio-group input[type="radio"] {
    appearance: none;
    -webkit-appearance: none;
    width: 18px;
    height: 18px;
    border: 2px solid var(--border-color);
    border-radius: 50%;
    margin: 0;
    cursor: pointer;
    position: relative;
    transition: all 0.2s ease;
}

.radio-group input[type="radio"]:checked {
    border-color: var(--accent-color);
}

.radio-group input[type="radio"]:checked::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 10px;
    height: 10px;
    background-color: var(--accent-color);
    border-radius: 50%;
    animation: radioSelect 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.radio-group input[type="radio"]:focus {
    outline: none;
    box-shadow: 0 0 0 2px rgba(var(--accent-color-rgb), 0.3);
}

.radio-group input[type="radio"]:hover {
    border-color: var(--accent-color);
}

@keyframes radioSelect {
    0% {
        transform: translate(-50%, -50%) scale(0);
        opacity: 0;
    }
    50% {
        transform: translate(-50%, -50%) scale(1.2);
        opacity: 1;
    }
    100% {
        transform: translate(-50%, -50%) scale(1);
        opacity: 1;
    }
}

/* Improve label styling */
.radio-group label {
    display: flex;
    align-items: center;
    gap: 10px;
    cursor: pointer;
    font-size: 14px;
    padding: 6px 8px;
    border-radius: 4px;
    transition: background-color 0.2s;
}

.radio-group label:hover {
    background-color: rgba(var(--text-color-rgb), 0.05);
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(-10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Dark Theme (default) */
:root[data-theme="dark"] {
    --bg-color: #1a1a1a;
    --text-color: #ffffff;
    --card-bg: #242424;
    --card-bg-transparent: rgba(36, 36, 36, 0.7);
    --card-bg-rgb: 36, 36, 36;
    --prayer-box-bg: #2a2a2a;
    --border-color: #333;
    --muted-text: #888;
    --muted-text-dark: #aaa;
    --muted-text-darker: #ccc; /* Even lighter in dark mode for better contrast */
    --accent-color: #00ff9d;
    --accent-color-rgb: 0, 255, 157;
    --prayer-box-bg-hover: #333333;
    --prayer-box-bg-past: #272727;
    --prayer-box-bg-future: #303030;
    --text-color-rgb: 255, 255, 255;
    --special-column-bg: rgba(255, 255, 255, 0.03);
    --special-column-bg-hover: rgba(255, 255, 255, 0.05);
}

/* Light Theme */
:root[data-theme="light"] {
    --bg-color: #f5f5f5;
    --text-color: #1a1a1a;
    --card-bg: #ffffff;
    --card-bg-transparent: rgba(255, 255, 255, 0.7);
    --card-bg-rgb: 255, 255, 255;
    --prayer-box-bg: #f0f0f0;
    --border-color: #e0e0e0;
    --muted-text: #666;
    --muted-text-dark: #444;
    --muted-text-darker: #222; /* Even darker for better contrast */
    --accent-color: #00b36b;
    --accent-color-rgb: 0, 179, 107;
    --prayer-box-bg-hover: #e8e8e8;
    --prayer-box-bg-past: #e5e5e5;
    --prayer-box-bg-future: #f7f7f7;
    --text-color-rgb: 26, 26, 26;
    --special-column-bg: rgba(0, 0, 0, 0.03);
    --special-column-bg-hover: rgba(0, 0, 0, 0.05);
}

body {
    background-color: var(--bg-color);
    color: var(--text-color);
}

/* Ensure smooth scrolling */
html {
    scroll-behavior: smooth;
}

/* Add celebration animation for completed cells */
@keyframes celebrate {
    0% {
        transform: translateY(-50%) scale(1);
        opacity: 0;
    }
    20% {
        transform: translateY(-50%) scale(1.3);
        opacity: 1;
    }
    40% {
        transform: translateY(-50%) scale(0.95);
        opacity: 1;
    }
    60% {
        transform: translateY(-50%) scale(1.05);
        opacity: 1;
    }
    100% {
        transform: translateY(-50%) scale(1);
        opacity: 1;
    }
}

@keyframes float {
    0% {
        transform: translate(0, 0) rotate(0deg) scale(0);
        opacity: 0;
    }
    15% {
        opacity: 1;
        transform: translate(0, 0) rotate(0deg) scale(1.2);
    }
    30% {
        transform: translate(var(--tx) * 0.3, calc(var(--ty) * 0.3 - 5px)) rotate(var(--r) * 0.3) scale(1);
        opacity: 0.9;
    }
    100% {
        transform: translate(var(--tx), calc(var(--ty) - 15px)) rotate(var(--r)) scale(0);
        opacity: 0;
    }
}

/* Update celebration position to appear from the right side */
td.completed .celebration {
    position: absolute;
    top: 10%;
    left: auto; /* Remove left positioning */
    right: 20px; /* Position from right instead */
    width: 60px;
    height: 60px;
    transform: translate(50%, -50%); /* Adjust transform to work from right */
    pointer-events: none;
    z-index: 10;
}

/* Grey out Date, Sehr and Iftar columns */
td:nth-child(1), /* Date column */
td:nth-child(2), /* Sehr column */
td:nth-child(6)  /* Iftar column */ {
    color: var(--muted-text); /* Use muted text color */
    font-weight: normal; /* Ensure normal font weight */
}

/* Ensure these columns don't change appearance on hover */
td:nth-child(1):hover,
td:nth-child(2):hover,
td:nth-child(6):hover {
    color: var(--muted-text) !important; /* Force muted color even on hover */
    background-color: transparent !important; /* Ensure no background change */
}

/* Add tactile press animation for cell contents */
@keyframes cellPress {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(0.97);
    }
    100% {
        transform: scale(1);
    }
}

/* Apply tactile animation to cell content */
td {
    font-size: 14px;
    line-height: 1.5;
    position: relative;
    transition: color 0.2s;
    padding-left: 12px;
}

/* Add a wrapper for cell content to animate */
td .cell-content {
    display: inline-block;
    transform-origin: left center;
}

/* Apply press animation when cell is clicked */
td.animate-press .cell-content {
    animation: cellPress 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

/* Individual celebration particles - more elegant styling */
td.completed .celebration i {
    position: absolute;
    top: 50%;
    left: 50%;
    font-size: 12px;
    color: var(--accent-color);
    text-shadow: 0 0 5px rgba(var(--accent-color-rgb), 0.5);
    animation: float 1.5s ease-out forwards;
    opacity: 0;
}

/* Modify the celebration animation to keep the checkmark in place */
@keyframes celebrate {
    0% {
        transform: translateY(-50%) scale(1);
        opacity: 0;
    }
    20% {
        transform: translateY(-50%) scale(1.3);
        opacity: 1;
    }
    40% {
        transform: translateY(-50%) scale(0.95);
        opacity: 1;
    }
    60% {
        transform: translateY(-50%) scale(1.05);
        opacity: 1;
    }
    100% {
        transform: translateY(-50%) scale(1);
        opacity: 1;
    }
}

/* Update the completed checkmark to maintain position */
td.completed::before {
    color: var(--accent-color);
    opacity: 1.0;
    animation: celebrate 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    text-shadow: 0 0 8px rgba(var(--accent-color-rgb), 0.4);
    transform: translateY(-50%); /* Ensure it stays vertically centered */
}

/* Spread out celebration particles more */
td.completed .celebration {
    position: absolute;
    top: 10%;
    left: auto; /* Remove left positioning */
    right: 20px; /* Position from right instead */
    width: 60px; /* Increased from 40px to 60px for more horizontal space */
    height: 60px; /* Increased from 40px to 60px for more vertical space */
    transform: translate(50%, -50%); /* Adjust transform to work from right */
    pointer-events: none;
    z-index: 10;
}

/* Adjust particle animation for better spacing */
/* Delete the entire function createCelebration(cell) {...} from the CSS file */

/* Unified slide animations for header content */
@keyframes slideInRight {
    0% {
        transform: translateX(20px);
        opacity: 0;
    }
    100% {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes slideInLeft {
    0% {
        transform: translateX(-20px);
        opacity: 0;
    }
    100% {
        transform: translateX(0);
        opacity: 1;
    }
}

/* Apply unified animation to the entire header content */
.header.animate-right .date-content,
.header.animate-right .main-times,
.header.animate-right .prayer-blocks {
    animation: slideInRight 0.3s ease-out forwards;
}

.header.animate-left .date-content,
.header.animate-left .main-times,
.header.animate-left .prayer-blocks {
    animation: slideInLeft 0.3s ease-out forwards;
}

/* Remove staggered delays */
.header.animate-right .date-content p,
.header.animate-left .date-content p,
.header.animate-right .main-times,
.header.animate-left .main-times,
.header.animate-right .prayer-blocks,
.header.animate-left .prayer-blocks {
    animation-delay: 0s;
}

/* Remove individual element animations */
.header.animate-right .date-content h1,
.header.animate-right .date-content p,
.header.animate-left .date-content h1,
.header.animate-left .date-content p {
    animation: none;
}

/* Update the prayer-time::after pseudo-element to show checkmark by default */
.prayer-time::after {
    content: '\f00c'; /* FontAwesome checkmark icon */
    font-family: 'Font Awesome 6 Free';
    font-weight: 900;
    position: absolute;
    right: 12px;
    top: 50%;
    transform: translateY(-50%);
    color: var(--muted-text);
    opacity: 0.3; /* Show with low opacity by default */
    transition: opacity 0.2s, color 0.2s;
    font-size: 14px;
    z-index: 15;
}

.prayer-time:hover::after {
    opacity: 0.7;
}

.prayer-time.completed::after {
    opacity: 1;
    color: var(--accent-color);
    animation: celebrate 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.prayer-time:hover {
    background-color: var(--prayer-box-bg-hover);
}

/* Add celebration styles for prayer boxes */
.prayer-time.completed .celebration {
    position: absolute;
    top: 30%; /* Move up from 40% to 30% to position well above the checkmark */
    right: 12px;
    width: 40px;
    height: 40px;
    transform: translate(0, -50%);
    pointer-events: none;
    z-index: 20;
    overflow: visible;
}

/* Adjust particle animation for prayer boxes to start from above */
.prayer-time.completed .celebration i {
    position: absolute;
    font-size: 12px;
    color: var(--accent-color);
    text-shadow: 0 0 5px rgba(var(--accent-color-rgb), 0.5);
    animation: float 1.5s ease-out forwards;
    opacity: 0;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

/* Add tactile press animation for prayer boxes */
@keyframes boxPress {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(0.98);
    }
    100% {
        transform: scale(1);
    }
}

.prayer-time.animate-press {
    animation: boxPress 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

/* Add back the checkmark as a separate pseudo-element */
.prayer-time .checkmark {
    content: '\f00c'; /* FontAwesome checkmark icon */
    font-family: 'Font Awesome 6 Free';
    font-weight: 900;
    position: absolute;
    right: 12px;
    top: 50%;
    transform: translateY(-50%);
    color: var(--muted-text);
    opacity: 0;
    transition: opacity 0.2s, color 0.2s;
    font-size: 14px;
    z-index: 15;
}

.prayer-time:hover .checkmark {
    opacity: 0.7;
}

.prayer-time.completed .checkmark {
    opacity: 1;
    color: var(--accent-color);
    animation: celebrate 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

/* Hide pulse when prayer is completed */
.prayer-time.active.completed::before,
.prayer-time.active.completed::after {
    display: none;
}

/* Update progress bar animation with ease-in-out */
@keyframes progressGrow {
    from {
        width: 0%;
    }
    to {
        width: var(--target-progress);
    }
}

.progress.animate {
    animation: progressGrow 1.5s ease-in-out forwards;
}

/* Add styles for sunrise and sunset indicators */
.time-indicator {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 12px 8px;
    color: var(--muted-text);
    font-size: 12px;
    opacity: 0.7;
    transition: opacity 0.3s;
}

.time-indicator:hover {
    opacity: 1;
}

.time-indicator i {
    margin-bottom: 4px;
    font-size: 14px;
    color: var(--muted-text);
}

/* Prevent color change on hover */
.time-indicator:hover i {
    color: var(--muted-text) !important;
}

/* Prevent opacity change on hover */
.time-indicator:hover {
    opacity: 0.7;
}

/* Style for Material Icons */
.time-indicator .material-icons {
    margin-bottom: 4px;
    font-size: 16px;
    color: var(--muted-text);
}

/* Prevent color change on hover */
.time-indicator:hover .material-icons {
    color: var(--muted-text) !important;
}

/* Add styles for past, current, and future prayer times */
.prayer-time.past {
    background-color: var(--prayer-box-bg-past);
}

.prayer-time.active {
    position: relative;
    overflow: hidden; /* Ensure the ripple stays contained */
    background-color: var(--prayer-box-bg) !important; /* Use the same background as other prayer boxes */
}

/* Only disable future prayers that are not on the current day */
.prayer-time.future {
    background-color: var(--prayer-box-bg-future);
}

/* Add a new class for future prayers on future dates */
.prayer-time.future-date {
    pointer-events: none; /* Disable interactions for future dates */
    cursor: default; /* Use default cursor instead of pointer */
    opacity: 0.7; /* Make them appear slightly faded */
}

/* Hide checkmark for future prayers on future dates */
.prayer-time.future-date .checkmark,
.prayer-time.future-date .checkmark-icon {
    display: none !important;
}

/* Ensure hover effect is still visible on past prayer times and current day future prayers */
.prayer-time.past:hover,
.prayer-time.future:not(.future-date):hover {
    background-color: var(--prayer-box-bg-hover);
}

.prayer-time.future-date:hover {
    background-color: var(--prayer-box-bg-future) !important; /* No hover effect for future dates */
}

/* Style for completed prayer boxes - ensure background is always visible */
.prayer-time.completed {
    background-color: rgba(var(--accent-color-rgb), 0.05) !important; /* Very low opacity green background */
    border: 1px solid var(--accent-color) !important; /* Green border using the accent color */
    box-shadow: 0 0 8px rgba(var(--accent-color-rgb), 0.1) !important; /* Subtle glow effect */
}

/* Hide pulse when prayer is completed - make sure this rule is applied with !important */
.prayer-time.active.completed::before,
.prayer-time.active.completed::after {
    display: none !important; /* Force hide with !important */
}

/* Make sure completed state overrides any other states */
.prayer-time.active.completed,
.prayer-time.past.completed,
.prayer-time.future.completed {
    background-color: rgba(var(--accent-color-rgb), 0.05) !important;
    border: 1px solid var(--accent-color) !important;
}

/* Hide checkmarks for Date, Sehr and Iftar columns */
td:nth-child(1)::before, /* Date column */
td:nth-child(2)::before, /* Sehr column */
td:nth-child(6)::before  /* Iftar column */ {
    display: none;
}

/* Adjust padding for Date, Sehr and Iftar columns since they don't have checkmarks */
td:nth-child(1),
td:nth-child(2),
td:nth-child(6) {
    padding-right: 12px; /* Reset to normal padding */
}

/* Prevent hover effects completely on Date, Sehr and Iftar columns */
td:nth-child(1):hover,
td:nth-child(2):hover,
td:nth-child(6):hover {
    color: var(--muted-text) !important; /* Force muted color even on hover */
    background-color: transparent !important; /* Ensure no background change */
    cursor: default; /* Use default cursor instead of pointer */
}

/* Style Sehr and Iftar columns to stand out - with theme-specific backgrounds */
td:nth-child(2), /* Sehr column */
td:nth-child(6)  /* Iftar column */ {
    color: var(--text-color) !important; /* Use main text color */
    font-weight: normal !important; /* Use normal font weight */
    background-color: transparent !important; /* Remove special background */
}

/* Ensure these columns maintain their style on hover */
td:nth-child(2):hover,
td:nth-child(6):hover {
    color: inherit !important; /* Use default hover color */
    background-color: inherit !important; /* Use default hover background */
}

/* Style Sehr and Iftar header cells to match their column styling */
th:nth-child(2), /* Sehr header */
th:nth-child(6)  /* Iftar header */ {
    background-color: transparent !important; /* Remove special background */
    color: var(--muted-text); /* Use default header text color */
    font-weight: normal; /* Use default font weight */
}

/* Add subtle border to visually separate these special columns - fixed for both themes */
th:nth-child(2),
th:nth-child(6),
td:nth-child(2),
td:nth-child(6) {
    /* Use a semi-transparent border that works in both light and dark themes */
    border-left: 1px solid var(--border-color);
    border-right: 1px solid var(--border-color);
}

/* Show checkmarks for Sehr and Iftar columns */
td:nth-child(2)::before, /* Sehr column */
td:nth-child(6)::before  /* Iftar column */ {
    display: block; /* Show checkmarks */
}

/* Add proper padding for checkmark space */
td:nth-child(2),
td:nth-child(6) {
    padding-right: 35px; /* Add padding for checkmark */
}

/* Allow hover effects on Sehr and Iftar columns */
td:nth-child(2):hover,
td:nth-child(6):hover {
    cursor: pointer; /* Use pointer cursor */
}

/* Only keep Date column special */
td:nth-child(1), /* Date column */
td:nth-child(1):hover {
    color: var(--muted-text) !important; /* Force muted color even on hover */
    background-color: transparent !important; /* Ensure no background change */
    cursor: default; /* Use default cursor instead of pointer */
}

/* Hide checkmark only for Date column */
td:nth-child(1)::before { /* Date column */
    display: none;
}

/* Adjust padding for Date column since it doesn't have checkmark */
td:nth-child(1) {
    padding-right: 12px; /* Reset to normal padding */
}

/* Mobile responsiveness - Fix time display to prevent wrapping */
@media (max-width: 768px) {
    /* Adjust container padding */
    .container {
        padding: 15px;
        gap: 20px;
    }
    
    /* Adjust header for mobile */
    .header {
        padding: 15px;
        margin-bottom: 10px;
        width: calc(100% - 30px);
    }
    
    /* Ensure table container has proper spacing */
    .table-container {
        margin-top: 10px;
        padding: 15px;
    }
    
    /* Change theme toggle from fixed to absolute positioning */
    .theme-toggle {
        position: absolute;
        top: 10px;
        right: 10px;
        z-index: 1000;
    }
    
    /* Add padding to container to make room for the buttons */
    .container {
        padding-top: 50px;
    }
    
    /* Ensure the header doesn't overlap with the buttons */
    .header {
        margin-top: 10px;
    }
    
    /* Adjust prayer blocks for mobile */
    .prayer-blocks {
        flex-direction: column;
        gap: 8px;
    }
    
    /* Make prayer time boxes more compact */
    .prayer-time {
        min-height: 50px;
        padding: 8px 8px 8px 30px;
    }
    
    /* Adjust main times for mobile */
    .main-times {
        margin: 20px 0;
    }
    
    /* Adjust time block sizes */
    .time-block .time {
        font-size: 24px;
    }
    
    .time-block .label {
        font-size: 12px;
    }
    
    /* Improve progress bar visibility on mobile - make it wider */
    .progress-bar {
        height: 6px !important; /* Force height with !important */
        margin: 0 10px !important; /* Add some margin */
        left: 5% !important; /* Reduce left spacing from 10% to 5% */
        right: 5% !important; /* Reduce right spacing from 10% to 5% */
        width: 90% !important; /* Increase width from 80% to 90% */
    }
    
    .progress {
        min-width: 6px !important; /* Ensure minimum width */
        border-radius: 3px !important; /* Match the container */
    }
    
    /* Ensure the main times section has enough space for the progress bar */
    .main-times {
        margin: 25px 0;
        min-height: 90px; /* Ensure enough height */
    }
    
    /* Ensure table has horizontal scroll with sticky first column */
    .table-container {
        overflow-x: auto;
        -webkit-overflow-scrolling: touch; /* Smooth scrolling on iOS */
        position: relative; /* Ensure proper stacking context */
    }
    
    /* Ensure minimum width for the table */
    table {
        min-width: 750px;
    }
    
    /* Make date column stick to the edge of the container */
    th:first-child, td:first-child {
        position: sticky;
        left: 0;
        z-index: 10; /* Higher than regular cells */
        background-color: var(--card-bg); /* Match table background */
        /* Add shadow for better visual separation */
        box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
        min-width: 80px; /* Ensure date column has enough width */
    }
    
    /* Increase cell width to prevent time wrapping */
    td, th {
        min-width: 90px; /* Minimum width for all cells */
        white-space: nowrap; /* Prevent text wrapping */
    }
    
    /* Special columns (Sehr/Iftar) should be slightly wider */
    td:nth-child(2), td:nth-child(6),
    th:nth-child(2), th:nth-child(6) {
        min-width: 100px;
    }
    
    /* Add scroll indicators */
    .table-container.scrolled-right::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 15px;
        z-index: 11;
        pointer-events: none;
    }
    
    .table-container.scrolled-left::after {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        height: 100%;
        width: 15px;
        z-index: 11;
        pointer-events: none;
    }
    
    /* Remove left padding from table container on mobile */
    .table-container {
        padding-left: 0 !important;
    }
    
    /* Adjust first column to align perfectly with container edge */
    th:first-child, td:first-child {
        border-left: none;
        padding-left: 12px;
    }
    
    /* Make time indicator horizontal to save space */
    .time-indicator {
        flex-direction: row;
        align-items: center;
        justify-content: center;
        gap: 8px;
        padding: 8px;
    }
    
    .time-indicator i,
    .time-indicator .material-icons {
        margin-bottom: 0;
        margin-right: 4px;
    }
    
    /* Adjust spacing in prayer blocks for better mobile layout */
    .prayer-blocks {
        gap: 6px;
    }
}

/* Extra small devices */
@media (max-width: 480px) {
    /* Further reduce padding */
    .container {
        padding: 10px;
        padding-top: 40px;
    }
    
    .header {
        padding: 12px;
    }
    
    .table-container {
        padding: 12px;
    }
    
    /* Make theme toggle smaller */
    .theme-toggle {
        top: 5px;
        right: 5px;
    }
    
    .theme-button,
    .settings-button {
        padding: 8px;
        font-size: 18px;
    }
    
    /* Make time display smaller */
    .time-block .time {
        font-size: 20px;
    }
    
    /* Make prayer boxes even more compact */
    .prayer-time {
        min-height: 45px;
        padding: 6px 6px 6px 28px;
    }
    
    /* Further improve progress bar for very small screens - make it even wider */
    .progress-bar {
        height: 8px !important; /* Even larger on very small screens */
        left: 2% !important; /* Reduce left spacing from 15% to 2% */
        right: 2% !important; /* Reduce right spacing from 15% to 2% */
        width: 96% !important; /* Increase width from 70% to 96% */
    }
    
    .progress {
        min-width: 8px !important;
        border-radius: 4px !important;
    }
    
    /* Ensure the main times section has enough space */
    .main-times {
        min-height: 100px;
    }
    
    /* Further adjust cell widths for very small screens */
    td, th {
        min-width: 85px; /* Slightly smaller minimum width */
    }
    
    /* Make date column slightly narrower but still readable */
    th:first-child, td:first-child {
        min-width: 70px;
    }
    
    /* Further reduce padding for very small screens */
    .table-container {
        padding: 12px 12px 12px 0; /* Remove left padding only */
    }
    
    .time-indicator {
        padding: 6px;
        gap: 4px;
    }
    
    .time-indicator i,
    .time-indicator .material-icons {
        font-size: 14px;
    }
    
    .time-indicator .time {
        font-size: 12px;
    }
}

/* Adjust the z-index for the time displays */
.sehri-time, .iftar-time {
    position: relative;
    z-index: 2; /* Higher z-index to appear above the progress line */
}

/* Ensure the progress line has a z-index between the background and the time */
.progress-line {
    position: relative;
    z-index: 1; /* Middle z-index to appear below the time but above the background */
}

/* Make sure the background has the lowest z-index */
.time-container {
    position: relative;
    z-index: 0; /* Lowest z-index for the background */
}

/* Update theme toggle positioning for mobile */
@media (max-width: 768px) {
    /* Change theme toggle from fixed to absolute positioning */
    .theme-toggle {
        position: absolute; /* Change from fixed to absolute */
        top: 10px; /* Reduced from 40px to 10px */
        right: 10px;
        z-index: 1000;
    }
    
    /* Add padding to container to make room for the buttons */
    .container {
        padding-top: 50px; /* Add padding at the top to make room for the buttons */
    }
    
    /* Ensure the header doesn't overlap with the buttons */
    .header {
        margin-top: 10px;
    }
}

/* Extra small devices - further adjustments */
@media (max-width: 480px) {
    .theme-toggle {
        top: 5px; /* Even less space on very small screens */
        right: 5px;
    }
    
    .theme-button,
    .settings-button {
        padding: 8px; /* Smaller padding */
        font-size: 18px; /* Slightly smaller icons */
    }
    
    /* Adjust container padding for smaller screens */
    .container {
        padding-top: 40px;
    }
}

/* Add horizontal scroll indicators for table */
.table-container {
    position: relative; /* Needed for absolute positioning of indicators */
}

/* Add styles for the new checkmark icon */
.prayer-time .checkmark-icon {
    font-family: 'Font Awesome 6 Free';
    font-weight: 900;
    position: absolute;
    right: 12px;
    top: 50%;
    transform: translateY(-50%);
    color: var(--muted-text);
    opacity: 0.3; /* Show with low opacity by default */
    transition: opacity 0.2s, color 0.2s;
    font-size: 14px;
    z-index: 15;
}

.prayer-time:hover .checkmark-icon {
    opacity: 0.7;
}

.prayer-time.completed .checkmark-icon {
    opacity: 1;
    color: var(--accent-color);
    animation: celebrate 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

/* Remove the ::after pseudo-element checkmark */
.prayer-time::after {
    display: none;
}

.settings-info {
    font-size: 12px;
    color: var(--muted-text);
    margin-top: 8px;
    line-height: 1.4;
    padding-left: 8px;
    border-left: 2px solid var(--border-color);
}

/* Location Permission Overlay */
.location-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.8);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 2000;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s, visibility 0.3s;
}

.location-overlay.active {
    opacity: 1;
    visibility: visible;
}

.location-dialog {
    background-color: var(--card-bg);
    border-radius: 16px;
    padding: 30px;
    width: 90%;
    max-width: 400px;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
    text-align: center;
    animation: dialogFadeIn 0.4s ease-out;
}

@keyframes dialogFadeIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.location-icon {
    font-size: 48px;
    color: var(--accent-color);
    margin-bottom: 20px;
}

.location-dialog h2 {
    margin: 0 0 15px;
    font-size: 24px;
    font-weight: 500;
}

.location-dialog p {
    margin: 0 0 20px;
    line-height: 1.5;
    color: var(--text-color);
}

.location-note {
    font-size: 13px;
    color: var(--muted-text) !important;
    font-style: italic;
    margin-top: 20px !important;
    margin-bottom: 0 !important;
}

.location-buttons {
    display: flex;
    flex-direction: column;
    gap: 12px;
    margin-bottom: 0;
}

.location-allow, 
.location-default {
    padding: 14px 20px;
    border: none;
    border-radius: 8px;
    font-family: inherit;
    font-size: 16px;
    cursor: pointer;
    transition: all 0.2s;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
}

.location-allow {
    background-color: var(--accent-color);
    color: #000;
    font-weight: 500;
}

.location-allow:hover {
    background-color: var(--accent-color);
    opacity: 0.9;
    transform: translateY(-2px);
}

.location-default {
    background-color: transparent;
    border: 1px solid var(--border-color);
    color: var(--text-color);
}

.location-default:hover {
    background-color: rgba(var(--text-color-rgb), 0.05);
}

/* Mobile adjustments for location dialog */
@media (max-width: 768px) {
    .location-dialog {
        padding: 25px;
        width: 85%;
    }
}

@media (max-width: 480px) {
    .location-dialog {
        padding: 20px;
        width: 90%;
    }
    
    .location-icon {
        font-size: 36px;
        margin-bottom: 15px;
    }
    
    .location-dialog h2 {
        font-size: 20px;
    }
}

/* Hide checkmarks for future prayer times in the table */
tr.future-date td:not(:first-child):not(:nth-child(2)):not(:nth-child(6))::before {
    display: none; /* Hide the checkmark */
}

/* Make future prayer cells unselectable */
tr.future-date td:not(:first-child):not(:nth-child(2)):not(:nth-child(6)) {
    pointer-events: none; /* Disable interactions */
    opacity: 0.7; /* Make them appear slightly faded */
    cursor: default; /* Use default cursor instead of pointer */
}

/* Add a subtle visual indicator that these cells are not interactive */
tr.future-date td:not(:first-child):not(:nth-child(2)):not(:nth-child(6)):hover {
    background-color: transparent !important; /* No hover effect */
}

/* Keep the date column styling consistent */
tr.future-date td:first-child {
    opacity: 1 !important; /* Keep date column fully visible */
}

/* Make sure Sehr and Iftar cells are selectable by adding them to the click handler */
/* Remove these cells from the list of cells to skip in the addCellClickHandlers function */

/* Hide checkmarks for ALL cells in future dates, including Sehr and Iftar */
tr.future-date td::before {
    display: none !important; /* Hide all checkmarks in future dates */
}

/* Make ALL cells in future dates unselectable */
tr.future-date td {
    pointer-events: none !important; /* Disable interactions */
    opacity: 0.7 !important; /* Make them appear slightly faded */
    cursor: default !important; /* Use default cursor instead of pointer */
}

/* Add a subtle visual indicator that these cells are not interactive */
tr.future-date td:hover {
    background-color: transparent !important; /* No hover effect */
}

/* Keep the date column styling consistent */
tr.future-date td:first-child {
    opacity: 1 !important; /* Keep date column fully visible */
}

/* Ensure completed cells maintain their green background on hover */
td.completed:hover {
    background-color: rgba(var(--accent-color-rgb), 0.08) !important; /* Slightly darker green on hover */
    color: var(--accent-color) !important; /* Maintain green text color */
}

/* Specifically target all prayer columns to maintain green background on hover when completed */
td:nth-child(2).completed:hover, /* Fajr column */
td:nth-child(3).completed:hover, /* Zuhr column */
td:nth-child(4).completed:hover, /* Asr column */
td:nth-child(5).completed:hover, /* Maghrib column */
td:nth-child(6).completed:hover  /* Isha column */ {
    background-color: rgba(var(--accent-color-rgb), 0.08) !important; /* Slightly darker green on hover */
    color: var(--accent-color) !important; /* Maintain green text color */
}

/* Make sure the checkmark stays visible and green when hovering over completed cells */
td.completed:hover::before,
td:nth-child(2).completed:hover::before,
td:nth-child(3).completed:hover::before,
td:nth-child(4).completed:hover::before,
td:nth-child(5).completed:hover::before,
td:nth-child(6).completed:hover::before {
    color: var(--accent-color) !important; /* Keep green color on hover */
    opacity: 1.0 !important; /* Keep full opacity */
}

/* Style for completed cell styling - ensure consistent styling for all prayer columns */
td.completed {
    background-color: rgba(var(--accent-color-rgb), 0.05) !important;
    color: var(--accent-color) !important;
    font-weight: 500 !important;
}

/* Ensure the checkmark is visible and green for all completed cells */
td.completed::before {
    color: var(--accent-color) !important;
    opacity: 1.0 !important;
    animation: celebrate 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

/* Update pointer cursor for prayer time columns with new indices */
td:nth-child(2), /* Fajr column */
td:nth-child(3), /* Zuhr column */
td:nth-child(4), /* Asr column */
td:nth-child(5), /* Maghrib column */
td:nth-child(6)  /* Isha column */ {
    cursor: pointer; /* Show hand cursor on hover */
}

/* Update the date column background to match the table container */
th:first-child, td:first-child {
    position: sticky;
    left: 0;
    z-index: 10;
    background-color: var(--card-bg) !important; /* Force background color with !important */
    border-left: 1px solid var(--border-color);
    box-shadow: none; /* Remove the drop shadow */
}

/* Ensure the date column background stays consistent when scrolling */
.table-container::-webkit-scrollbar-track {
    background-color: var(--card-bg);
}

/* Make sure the date column header has the same background */
thead th:first-child {
    background-color: var(--card-bg) !important; /* Force background color with !important */
}

/* Add this to ensure the background is applied correctly in all states */
tr:hover td:first-child,
tr.future-date td:first-child,
tr:nth-child(odd) td:first-child,
tr:nth-child(even) td:first-child {
    background-color: var(--card-bg) !important; /* Force background color in all states */
}

/* Also remove the drop shadow from the duplicate rule */
.table-container th:first-child, 
.table-container td:first-child {
    box-shadow: none;
}

/* Ensure no cells have shadow effects */
td, th {
    box-shadow: none !important;
    text-shadow: none !important;
}

/* Remove any special background from active cells */
td.active, .prayer-time.active {
    box-shadow: none !important;
    background-color: var(--prayer-box-bg) !important; /* Use prayer-box-bg instead of card-bg */
}

/* Update highlighting for current date row to use gray instead of green */
tr.current-date {
    background-color: rgba(var(--text-color-rgb), 0.03) !important;
}

/* Update highlighting for rows with all prayers completed */
tr.all-completed {
    background-color: rgba(var(--text-color-rgb), 0.05) !important;
}

/* Keep the left border for current date, but make it more subtle */
tr.current-date td:first-child {
    border-left: 3px solid rgba(var(--text-color-rgb), 0.3) !important;
    padding-left: 9px; /* Adjust padding to account for border */
}

/* Keep the left border for completed date */
tr.all-completed td:first-child {
    border-left: 3px solid var(--muted-text) !important;
    padding-left: 9px; /* Adjust padding to account for border */
}

/* Ensure the highlighting doesn't affect future dates */
tr.future-date.current-date,
tr.future-date.all-completed {
    background-color: transparent !important;
}

/* Ensure the highlighting doesn't affect the sticky header */
thead tr th {
    background-color: var(--card-bg) !important;
} 